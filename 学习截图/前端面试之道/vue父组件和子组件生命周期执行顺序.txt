vue父子组件生命周期和执行过程
加载渲染过程
父beforeCreate -> 父create -> 父beforeMount -> 
子beforeCreate -> 子create -> 子beforeMound -> 子Mound ->
父Mounded
子组件更新过程
父beforeUpdate -> 子beforeUpdate ->子update ->父updata
父组件更新过程
父beforeUpdate -> 父update
销毁过程
父beforeDestroy -> 子beforeDestroy -> 子destoryed ->父destoryed


vue里循环带key的作用
为了在数据变化是强制更新组件，以避免原地服用带来的副作用，不带key性能更好


 vue中子组件不可修改父组件传的prop
将数据的源头同一位父组件，子组件想要改prop只能委托父组件帮他，从而保证数据修改源唯一

vue如何优化首页加速度？
产生原因：单页应用的html是靠js生成的，首页需要加载大量js所以白屏
解决方法：优化webpack，减小打包体积，按需加载
	服务端渲染，在服务器端事先拼装好首页所需的html
	首页加载loading或骨架屏（仅优化体验）

this.$nextTick目的是把传进来的函数延迟到dom更新后再执行